[tool.poetry]

authors = [
    "Alexander Goryev <lxgorev@gmail.com>",
    "Alexey Tsivunin <alexey.tsivunin@yandex.ru",
]

description = "Backend for WLSS application."

name = "wlss-backend"

version = "0.0.0"


[tool.poetry.dependencies]

python = "~3.11"


[tool.poetry.group.app]

optional = true


[tool.poetry.group.app.dependencies]

alembic = {extras = ["tz"], version = "1.10.4"}
asyncpg = "0.27.0"  # asynchronous postgresql driver used by sqlalchemy
bcrypt = "4.0.1"  # modern password hashing library
fastapi = {extras = ["all"], version = "0.109.0" }  # we need "all" at least for uvicorn
minio = "7.1.14"
overrides = "7.3.1"
psycopg2-binary = "2.9.7"  # used for some special cases when we cannot work with database via async code
pydantic = "2.5.3"
python-dotenv = "1.0.0"
sqlalchemy = {extras = ["asyncio"], version = "2.0.12"}
varname = "0.12.0"


[tool.poetry.group.lint]

optional = true


[tool.poetry.group.lint.dependencies]

black = "23.3.0"
darglint = "1.8.1"  # Checks whether a docstring's description matches the actual function/method implementation
dlint = "0.14.0"  # Tool for encouraging best coding practices and helping ensure Python code is secure.
flake8 = "6.0.0"
flake8-aaa = "0.14.0"  # Lints tests against the Arrange Act Assert pattern.
flake8-absolute-import = "1.0.0.1"  # Plugin to require absolute imports.
flake8-annotations-complexity = "0.0.7"  # Plugin to validate annotations complexity.
flake8-codes = "0.2.2"  # CLI tool to introspect flake8 plugins and their codes.
flake8-docstrings = "1.7.0"  # Include checks provided by pep257
flake8-functions = "0.0.7"  # Plugin for validation of function parameters (length, complexity, etc).
flake8-import-order = "0.18.2"  # Include checks import order against various Python Style Guides.
flake8-mock-x2 = "0.4.1"  # Provides checking mock non-existent methods.
flake8-mutable = "1.2.0"  # Extension for mutable default arguments.
flake8-rst-docstrings = "0.3.0"  # Validate Python docstrings as reStructuredText (сRST)
flake8-spellcheck = "0.28.0"  # Spellcheck variables, classnames, comments, docstrings etc.
mypy = "1.2.0"
pyenchant = "3.2.2"  # needed for pylint's spellchecker
pylint = "2.17.2"
pylint-per-file-ignores = "1.2.0"  # A pylint plugin to ignore error codes per file.
pylint-pydantic = "0.3.2"  # A Pylint plugin to help Pylint understand the Pydantic.
ruff = "0.0.261"
types-ujson = "5.7.0.5"  # types for mypy


[tool.poetry.group.test]

optional = true


[tool.poetry.group.test.dependencies]

dirty-equals = "0.6.0"
pytest = "7.3.0"
pytest-cov = "4.0.0"
pytest-env = "0.8.1"  # needed to set up default $WLSS_ENV for tests execution


[tool.poetry.group.deploy]

optional = true


[tool.poetry.group.deploy.dependencies]

gunicorn = "20.1.0"


[tool.pylint-per-file-ignores]

"tests/conftest.py" = """ \
    redefined-outer-name, \
"""


[build-system]

build-backend = "poetry.core.masonry.api"

requires = ["poetry-core"]
