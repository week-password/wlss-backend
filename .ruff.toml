ignore = [
    "D203",  # ignores D203 (one-blank-line-before-class) since we use D211 (no-blank-line-before-class)
    "D213",  # ignores D213 (multi-line-summary-second-line) since we use D212 (multi-line-summary-first-line)
]

line-length = 120

select = [
    "ALL",  # enable all rules by default
]

# Allow imports relative to these directories.
src = ["src"]


[per-file-ignores]

# files with fixtures
"tests/**/conftest.py" = [
    "ARG001",  # Unused function argument: {name}
]

# files with tests
"tests/*test_*" = [
    "ANN",  # Absence of function annotations and type comments.
    "ARG001",  # Unused function argument: {name}
    "D",  # Missing docstrings.
    "PLR2004",  # Magic value used in comparison, consider replacing 200 with a constant variable.
    "PT001",  # Use `@pytest.fixture()` over `@pytest.fixture`.
    "PT023",  # Use `@pytest.mark.anyio()` over `@pytest.mark.anyio`.
    "S101",  # Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
]

# fixtures file
"tests/conftest.py" = [
    "ANN",  # Absence of function annotations and type comments.
    "PT001",  # Use `@pytest.fixture()` over `@pytest.fixture`.
]


[flake8-annotations]
# Whether to suppress ANN401 for dynamically typed *args and **kwargs arguments
allow-star-arg-any = true


[flake8-bugbear]
# Allow default arguments like, e.g., `data: List[str] = fastapi.Query(None)`.
extend-immutable-calls = ["fastapi.Depends"]


[isort]

# A list of modules to consider first-party, regardless of whether they
# can be identified as such via introspection of the local filesystem.
known-first-party = ["src", "tests"]

# The number of blank lines to place after imports.
lines-after-imports = 2

# Order imports by type, which is determined by case, in addition to alphabetically.
order-by-type = false
